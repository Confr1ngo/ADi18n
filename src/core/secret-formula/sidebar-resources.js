export const sidebarResources = [
  // Note: ID 0 is interpreted in the Vue component as "the largest unlocked ID" - do not use ID 0
  {
    id: 1,
    optionName: "blob",
    isAvailable: () => Themes.available().map(t => t.name).includes("S11"),
    // This is a dummy value to prevent vue errors
    value: () => new Decimal(1),
    formatValue: () => "\uE010",
    formatClass: "o-sidebar-currency--antimatter",
  },
  {
    id: 2,
    optionName: "antimatter",
    isAvailable: () => true,
    value: () => Currency.antimatter.value,
    formatValue: x => format(x, 2, 1),
    formatClass: "o-sidebar-currency--antimatter",
  },
  {
    id: 3,
    optionName: "infinity_points",
    isAvailable: () => PlayerProgress.infinityUnlocked(),
    value: () => Currency.infinityPoints.value.floor(),
    formatValue: x => format(x, 2),
    formatClass: "o-sidebar-currency--infinity",
  },
  {
    id: 4,
    optionName: "replicanti",
    isAvailable: () => Replicanti.areUnlocked || PlayerProgress.eternityUnlocked(),
    value: () => Replicanti.amount,
    formatValue: x => format(x, 2),
    formatClass: "o-sidebar-currency--replicanti",
  },
  {
    id: 5,
    optionName: "eternity_points",
    isAvailable: () => PlayerProgress.eternityUnlocked(),
    value: () => Currency.eternityPoints.value.floor(),
    formatValue: x => format(x, 2),
    formatClass: "o-sidebar-currency--eternity",
  },
  {
    id: 6,
    optionName: "total_tt",
    isAvailable: () => PlayerProgress.eternityUnlocked(),
    value: () => player.timestudy.theorem.plus(TimeTheorems.calculateTimeStudiesCost()),
    formatValue: x => format(x, 2),
    formatClass: "o-sidebar-currency--eternity",
  },
  {
    id: 7,
    optionName: "tachyon_particles",
    isAvailable: () => PlayerProgress.dilationUnlocked() || PlayerProgress.realityUnlocked(),
    value: () => Currency.tachyonParticles.value,
    formatValue: x => format(x, 2),
    formatClass: "o-sidebar-currency--dilation",
  },
  {
    id: 8,
    optionName: "dilated_time",
    isAvailable: () => PlayerProgress.dilationUnlocked() || PlayerProgress.realityUnlocked(),
    value: () => Currency.dilatedTime.value,
    formatValue: x => format(x, 2),
    formatClass: "o-sidebar-currency--dilation",
  },
  {
    id: 9,
    optionName: "v_main_unlock_5_name",
    isAvailable: () => PlayerProgress.realityUnlocked(),
    value: () => Currency.realityMachines.value,
    formatValue: x => format(x, 2),
    formatClass: "o-sidebar-currency--reality",
  },
  {
    id: 10,
    optionName: "relic_shards",
    isAvailable: () => TeresaUnlocks.effarig.isUnlocked,
    value: () => new Decimal(Currency.relicShards.value),
    formatValue: x => format(x, 2),
    formatClass: "o-sidebar-currency--effarig",
  },
  {
    id: 11,
    optionName: "htp_im_title",
    isAvailable: () => MachineHandler.isIMUnlocked,
    value: () => new Decimal(Currency.imaginaryMachines.value),
    formatValue: x => format(x, 2),
    formatClass: "o-sidebar-currency--reality",
  },
  {
    id: 12,
    optionName: "v_main_unlock_5_name",
    resourceName: "machines",
    isAvailable: () => MachineHandler.isIMUnlocked,
    // This is a dummy value to prevent vue errors
    value: () => Currency.realityMachines.value,
    formatValue: () => formatMachines(Currency.realityMachines.value, Currency.imaginaryMachines.value),
    formatClass: "o-sidebar-currency--reality",
  },
  {
    id: 13,
    optionName: "dark_matter",
    isAvailable: () => Laitela.isUnlocked,
    value: () => Currency.darkMatter,
    formatValue: x => format(x, 2),
    formatClass: "o-sidebar-currency--laitela",
  },
  {
    id: 14,
    optionName: "dark_energy_short",
    isAvailable: () => Laitela.isUnlocked,
    value: () => new Decimal(Currency.darkEnergy.value),
    formatValue: x => format(x, 2, 2),
    formatClass: "o-sidebar-currency--laitela",
  },
  {
    id: 15,
    optionName: "singularities",
    isAvailable: () => Laitela.isUnlocked,
    value: () => new Decimal(Currency.singularities.value),
    formatValue: x => format(x, 2),
    formatClass: "o-sidebar-currency--laitela",
  },
  {
    id: 16,
    optionName: "reality_shards",
    isAvailable: () => Pelle.isDoomed,
    value: () => Currency.realityShards,
    formatValue: x => format(x, 2),
    formatClass: "o-sidebar-currency--pelle",
  },
];
